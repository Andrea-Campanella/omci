/*
 * Copyright (c) 2018 - present.  Boling Consulting Solutions (bcsw.net)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * NOTE: This file was generated, manual edits will be overwritten!
 *
 * Generated by 'goCodeGenerator.py':
 *              https://github.com/cboling/OMCI-parser/README.md
 */
package generated

// AniG (class ID #263) defines the basic
// Managed Entity definition that is further extended by types that support
// packet encode/decode and user create managed entities.
type AniG struct {
	BaseManagedEntityDefinition
}

// NewAniG (class ID 263 creates the basic
// Managed Entity definition that is used to validate an ME of this type that
// is received from the wire, about to be sent on the wire.
func NewAniG(params ...ParamData) (IManagedEntityDefinition, error) {
	eid := decodeEntityID(params...)
	entity := BaseManagedEntityDefinition{
		Name:     "AniG",
		ClassID:  263,
		EntityID: eid,
		MessageTypes: []MsgType{
			Set,
			Get,
			Test,
		},
		AllowedAttributeMask: 0,
		AttributeDefinitions: []*AttributeDefinition{
			Uint16Field("ManagedEntityId", 0, Read),
			ByteField("SrIndication", 0, Read),
			Uint16Field("TotalTcontNumber", 0, Read),
			Uint16Field("GemBlockLength", 0, Read|Write),
			ByteField("PiggybackDbaReporting", 0, Read),
			ByteField("Deprecated", 0, Read),
			ByteField("SignalFailThreshold", 0, Read|Write),
			ByteField("SignalDegradeSdThreshold", 0, Read|Write),
			ByteField("Arc", 0, Read|Write),
			ByteField("ArcInterval", 0, Read|Write),
			Uint16Field("OpticalSignalLevel", 0, Read),
			ByteField("LowerOpticalThreshold", 0, Read|Write),
			ByteField("UpperOpticalThreshold", 0, Read|Write),
			Uint16Field("OnuResponseTime", 0, Read),
			Uint16Field("TransmitOpticalLevel", 0, Read),
			ByteField("LowerTransmitPowerThreshold", 0, Read|Write),
			ByteField("UpperTransmitPowerThreshold", 0, Read|Write),
		},
	}
	entity.computeAttributeMask()
	return &AniG{entity}, nil
}
